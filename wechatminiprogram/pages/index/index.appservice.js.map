{"version":3,"file":"","sourceRoot":"","sources":["pages/index/index.js"],"names":["Page","data","heartRate","spo2","ax","ay","az","gx","gy","gz","activityStatus","prevAx","prevAy","prevAz","prevGx","prevGy","prevGz","onLoad","this","fetchData","setInterval","_this","wx","request","url","method","header","Authorization","datastream_ids","success","res","console","log","code","datastreams","devices","hrValue","spo2Value","axValue","ayValue","azValue","gxValue","gyValue","gzValue","forEach","item","id","value","parseInt","totalChangeMagnitude","Math","abs","setData","error","showToast","title","icon","duration","fail","err"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;aAAAA,KAAK,CACHC,KAAM,CACJC,UAAW,MACXC,KAAM,MACNC,GAAI,MACJC,GAAI,MACJC,GAAI,MACJC,GAAI,MACJC,GAAI,MACJC,GAAI,MACJC,eAAgB,KAChBC,OAAQ,EACRC,OAAQ,EACRC,OAAQ,EACRC,OAAQ,EACRC,OAAQ,EACRC,OAAQ,GAGVC,OAAQ,WACNC,KAAKC,YACLC,YAAYF,KAAKC,UAAW,MAG9BA,UAAW,WAAY,IAAAE,EAAAH,KACrBI,GAAGC,QAAQ,CACTC,IAAK,qGACLC,OAAQ,MACRC,OAAQ,CACNC,cAAiB,mIAEnB1B,KAAM,CACJ2B,eAAkB,qCAEpBC,QAAS,SAAAC,GAKP,GAJAC,QAAQC,IAAI,YAAaF,EAAI7B,MAC7B8B,QAAQC,IAAI,WAAYF,EAAI7B,MAC5B8B,QAAQC,IAAI,iBAAkBF,EAAI7B,KAAKgC,MAElB,GAAjBH,EAAI7B,KAAKgC,KAAW,CACtB,IAAIC,EAAcJ,EAAI7B,KAAKA,KAAKkC,QAAQ,GAAGD,YAC3CH,QAAQC,IAAI,eAAgBE,GAE5B,IAAIE,EAAU,MACVC,EAAY,MACZC,EAAU,EACVC,EAAU,EACVC,EAAU,EACVC,EAAU,EACVC,EAAU,EACVC,EAAU,EAEdT,EAAYU,SAAQ,SAAAC,GACF,WAAZA,EAAKC,GACPV,EAAUS,EAAKE,MACM,aAAZF,EAAKC,GACdT,EAAYQ,EAAKE,MACI,OAAZF,EAAKC,GACdR,EAAUU,SAASH,EAAKE,OACH,OAAZF,EAAKC,GACdP,EAAUS,SAASH,EAAKE,OACH,OAAZF,EAAKC,GACdN,EAAUQ,SAASH,EAAKE,OACH,OAAZF,EAAKC,GACdL,EAAUO,SAASH,EAAKE,OACH,OAAZF,EAAKC,GACdJ,EAAUM,SAASH,EAAKE,OACH,OAAZF,EAAKC,KACdH,EAAUK,SAASH,EAAKE,WAK5B,IAAIrC,EAAiB,KAOfuC,EAH8BC,KAAKC,IAAIb,EAAUjB,EAAKpB,KAAKU,QAAUuC,KAAKC,IAAIZ,EAAUlB,EAAKpB,KAAKW,QAAUsC,KAAKC,IAAIX,EAAUnB,EAAKpB,KAAKY,SAC9GqC,KAAKC,IAAIV,EAAUpB,EAAKpB,KAAKa,QAAUoC,KAAKC,IAAIT,EAAUrB,EAAKpB,KAAKc,QAAUmC,KAAKC,IAAIR,EAAUtB,EAAKpB,KAAKe,SAK1IN,EADEuC,EAP2B,KAQZ,KACRA,EAVoB,IAWZ,KAEA,KAEnBlB,QAAQC,IAAI,SAAUiB,EAAsB,QAASvC,GAGrDW,EAAK+B,QAAQ,CACXlD,UAAWkC,EACXjC,KAAMkC,EACNjC,GAAIkC,EACJjC,GAAIkC,EACJjC,GAAIkC,EACJjC,GAAIkC,EACJjC,GAAIkC,EACJjC,GAAIkC,EACJjC,eAAgBA,EAChBC,OAAQ2B,EACR1B,OAAQ2B,EACR1B,OAAQ2B,EACR1B,OAAQ2B,EACR1B,OAAQ2B,EACR1B,OAAQ2B,SAGVZ,QAAQsB,MAAM,WAAYvB,EAAI7B,MAC9BqB,GAAGgC,UAAU,CACXC,MAAO,SACPC,KAAM,OACNC,SAAU,OAIhBC,KAAM,SAAAC,GACJ5B,QAAQsB,MAAM,WAAYM,GAC1BrC,GAAGgC,UAAU,CACXC,MAAO,SACPC,KAAM,OACNC,SAAU","sourcesContent":["Page({\n  data: {\n    heartRate: '---',      // 心率\n    spo2: '---',         // 血氧\n    ax: '---',           // 加速度X轴\n    ay: '---',           // 加速度Y轴\n    az: '---',           // 加速度Z轴\n    gx: '---',           // 陀螺仪X轴\n    gy: '---',           // 陀螺仪Y轴\n    gz: '---',           // 陀螺仪Z轴\n    activityStatus: '静止', //  活动状态，默认为“静止”\n    prevAx: 0,          //  上一次的加速度X轴值，初始值为 0\n    prevAy: 0,          //  上一次的加速度Y轴值，初始值为 0\n    prevAz: 0,          //  上一次的加速度Z轴值，初始值为 0\n    prevGx: 0,          //  新增：  上一次的陀螺仪X轴值，初始值为 0\n    prevGy: 0,          //  新增：  上一次的陀螺仪Y轴值，初始值为 0\n    prevGz: 0           //  新增：  上一次的陀螺仪Z轴值，初始值为 0\n  },\n\n  onLoad: function () {\n    this.fetchData(); // 页面加载时立即请求一次数据\n    setInterval(this.fetchData, 3000); // 每 3 秒定时刷新数据\n  },\n\n  fetchData: function () {\n    wx.request({\n      url: 'http://iot-api.heclouds.com/datapoint/current-datapoints?product_id=3VQ6EZjF8b&device_name=ESP8266',    //  替换为您的设备ID\n      method: 'GET',\n      header: {\n        'Authorization': 'version=2018-10-31&res=products%2F3VQ6EZjF8b%2Fdevices%2FESP8266&et=1741882180&method=md5&sign=s%2FDNKfduRo9%2BN1EbOPB1Kg%3D%3D' //  <---  您的 API Key， 使用 'Authorization' header\n      },\n      data: {\n        'datastream_ids': 'dis_hr,dis_spo2,AX,AY,AZ,GX,GY,GZ'    //   请求所有 8 个数据流 ID\n      },\n      success: res => {\n        console.log('res.data:', res.data);\n        console.log('API 请求成功', res.data);\n        console.log('res.data.code:', res.data.code);\n\n        if (res.data.code == 0) {\n          let datastreams = res.data.data.devices[0].datastreams;\n          console.log('datastreams:', datastreams);\n\n          let hrValue = '---';\n          let spo2Value = '---';\n          let axValue = 0;  //  修改：  初始化为 0\n          let ayValue = 0;  //  修改：  初始化为 0\n          let azValue = 0;  //  修改：  初始化为 0\n          let gxValue = 0;  //  修改：  初始化为 0\n          let gyValue = 0;  //  修改：  初始化为 0\n          let gzValue = 0;  //  修改：  初始化为 0\n\n          datastreams.forEach(item => {\n            if (item.id === 'dis_hr') {\n              hrValue = item.value;\n            } else if (item.id === 'dis_spo2') {\n              spo2Value = item.value;\n            } else if (item.id === 'AX') {\n              axValue = parseInt(item.value); //  修改：  转换为整数\n            } else if (item.id === 'AY') {\n              ayValue = parseInt(item.value); //  修改：  转换为整数\n            } else if (item.id === 'AZ') {\n              azValue = parseInt(item.value); //  修改：  转换为整数\n            } else if (item.id === 'GX') {\n              gxValue = parseInt(item.value); //  新增：  转换为整数\n            } else if (item.id === 'GY') {\n              gyValue = parseInt(item.value); //  新增：  转换为整数\n            } else if (item.id === 'GZ') {\n              gzValue = parseInt(item.value); //  新增：  转换为整数\n            }\n          });\n\n          //  ---  基于加速度和陀螺仪变化幅度的活动状态检测逻辑  ---\n          let activityStatus = '静止'; // 默认为静止\n          const changeThresholdWalking = 400;  //  步行变化阈值，需要根据实际情况调整 (组合阈值)\n          const changeThresholdRunning = 1800; //  跑步变化阈值，需要根据实际情况调整 (组合阈值)\n\n          const accelerationChangeMagnitude = Math.abs(axValue - this.data.prevAx) + Math.abs(ayValue - this.data.prevAy) + Math.abs(azValue - this.data.prevAz); // 计算加速度变化幅度 (绝对值之和)\n          const gyroscopeChangeMagnitude = Math.abs(gxValue - this.data.prevGx) + Math.abs(gyValue - this.data.prevGy) + Math.abs(gzValue - this.data.prevGz);     // 计算陀螺仪变化幅度 (绝对值之和)\n\n          const totalChangeMagnitude = accelerationChangeMagnitude + gyroscopeChangeMagnitude; //  组合变化幅度 (加速度 + 陀螺仪)\n\n          if (totalChangeMagnitude > changeThresholdRunning) {\n            activityStatus = '跑步';\n          } else if (totalChangeMagnitude > changeThresholdWalking) {\n            activityStatus = '行走';\n          } else {\n            activityStatus = '静止';\n          }\n          console.log('总变化幅度:', totalChangeMagnitude, '活动状态:', activityStatus); //  打印总变化幅度和活动状态\n\n\n          this.setData({\n            heartRate: hrValue,\n            spo2: spo2Value,\n            ax: axValue,\n            ay: ayValue,\n            az: azValue,\n            gx: gxValue,\n            gy: gyValue,\n            gz: gzValue,\n            activityStatus: activityStatus,       //  更新活动状态\n            prevAx: axValue,            //  更新上一次的加速度值\n            prevAy: ayValue,            //  更新上一次的加速度值\n            prevAz: azValue,            //  更新上一次的加速度值\n            prevGx: gxValue,            //  新增：  更新上一次的陀螺仪值\n            prevGy: gyValue,            //  新增：  更新上一次的陀螺仪值\n            prevGz: gzValue             //  新增：  更新上一次的陀螺仪值\n          });\n        } else {\n          console.error('API 请求错误', res.data);\n          wx.showToast({\n            title: '数据获取失败',\n            icon: 'none',\n            duration: 2000\n          });\n        }\n      },\n      fail: err => {\n        console.error('API 请求失败', err);\n        wx.showToast({\n          title: '网络请求失败',\n          icon: 'none',\n          duration: 2000\n        });\n      }\n    })\n  },\n})"],"wx":{"version":1,"userVersion":"1.0.0","userNotes":"2025.3.11上传的第一个版本，可以实时查看数据以及状态识别\n22 在 2025年3月11日晚上8点06分 提交上传","packageVersion":"1557b7bacea3bb1c91f02063b1a0736c"}}