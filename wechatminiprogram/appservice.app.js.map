{"version":3,"file":"","sourceRoot":"","sources":["envList.js","pages/index/constants.js","app.js"],"names":["module","exports","envList","isMac","highlightText","content","concat","QuickStartSteps","id","title","contents","type","QuickStartPoints","App","onLaunch","wx","cloud","init","env","traceUser","console","error","this","globalData"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;aAEAA,OAAOC,QAAU,CACfC,QAHc,GAIdC,OAHY;;aCOd,SAASC,EAAcC,GACrB,MAAA,WAAAC,OAAmBD,EAAO,aAM5B,IAAME,EAAkB,CACtB,CACEC,GAAI,IACJC,MAAO,eACPC,SAAU,CACR,CACEC,KAAM,OACNN,QAAO,YAAAC,OAAcF,EAAc,yCAAwC,MAAAE,OAAKF,EAAc,QAAO,KAAAE,OAAIF,EAAc,QAAO,eAAAE,OAAcF,EAAc,aAAY,0BAExK,CACEO,KAAM,OACNN,QAAO,8HAYT,CACEM,KAAM,YACNN,QAAS,CAAC,QAAQ,OAAO,sBAI/B,CACEG,GAAI,IACJC,MAAO,cACPC,SAAU,CACR,CACEC,KAAM,OACNN,QAAO,gBAAAC,OAAkBF,EAAc,8DAA6D,iCAEtG,CACEO,KAAM,OACNN,QAAO,2VAcT,CACEM,KAAM,OACNN,QAAO,UAAAC,OAAYF,EAAc,sCAAqC,gFAExE,CACEO,KAAM,QACNN,QAAS,uBAEX,CACEM,KAAM,OACNN,QAAO,yEAET,CACEM,KAAM,OACNN,QAAO,YAAAC,OAAcF,EAAc,kBAAiB,uBAEtD,CACEO,KAAM,QACNN,QAAS,oBAIf,CACEG,GAAI,IACJC,MAAO,aACPC,SAAU,CACR,CACEC,KAAM,OACNN,QAAO,QAAAC,OAAUF,EAAc,yCAAwC,mBAAAE,OAAkBF,EAAc,kBAAiB,uBAAAE,OAAsBF,EAAc,UAAS,eAEvK,CACEO,KAAM,OACNN,QAAO,gUAeT,CACEM,KAAM,OACNN,QAAO,wDAMT,CACEM,KAAM,YACNN,QAAS,CAAC,SAAS,QAAQ,gCAIjC,CACEG,GAAI,IACJC,MAAO,cACPC,SAAU,CACR,CACEC,KAAM,OACNN,QAAS,mEAEX,CACEM,KAAM,OACNN,QAAO,gDAAAC,OAAkDF,EAAc,SAAQ,gCAAAE,OAA+BF,EAAc,SAAQ,KAAAE,OAAIF,EAAc,SAAQ,QAEhK,CACEO,KAAM,QACNN,QAAS,iBAEX,CACEM,KAAM,QACNN,QAAS,oBAEX,CACEM,KAAM,OACNN,QAAO,WAAAC,OAAaF,EAAc,8DAA6D,6BAEjG,CACEO,KAAM,OACNN,QAAO,mUAiBT,CACEM,KAAM,OACNN,QAAO,UAAAC,OAAYF,EAAc,sCAAqC,oEAExE,CACEO,KAAM,YACNN,QAAS,CAAC,GAAG,OAAO,+BAI1B,CACEG,GAAI,IACJC,MAAO,eACPC,SAAU,CACR,CACEC,KAAM,OACNN,QAAS,mDAEX,CACEM,KAAM,OACNN,QAAO,cAAAC,OAAgBF,EAAc,2DAA0D,yCAEjG,CACEO,KAAM,OACNN,QAAO,qfAqBT,CACEM,KAAM,OACNN,QAAO,UAAAC,OAAYF,EAAc,sCAAqC,iCAExE,CACEO,KAAM,OACNN,QAAO,UAAAC,OAAYF,EAAc,yCAAwC,qBAAAE,OAAoBF,EAAc,kBAAiB,mBAE9H,CACEO,KAAM,OACNN,QAAO,iVAeT,CACEM,KAAM,YACNN,QAAS,CAAC,UAAU,QAAQ,kDAMpCL,OAAOC,QAAU,CACfW,iBAxPuB,CACvB,CAAEJ,GAAI,IAAKC,MAAO,mBAClB,CAAED,GAAI,IAAKC,MAAO,oBAuPlBF,gBAAAA;;aC3PFM,IAAI,CACFC,SAAU,WACHC,GAAGC,MAGND,GAAGC,MAAMC,KAAK,CAKZC,IAAK,GACLC,WAAW,IARbC,QAAQC,MAAM,2BAYhBC,KAAKC,WAAa","sourcesContent":["const envList = [];\nconst isMac = false;\nmodule.exports = {\n  envList,\n  isMac\n};\n","/**\n * 快速开始教程知识点\n */\nconst QuickStartPoints = [\n  { id: '1', title: '无需搭建服务器，快速构建小程序' },\n  { id: '2', title: '免登录、免鉴权调用微信开放服务' },\n];\n\nfunction highlightText(content) {\n  return `<span> \\`${content}\\` </span>`;\n}\n\n/**\n * 快速开始教程步骤\n */\nconst QuickStartSteps = [\n  {\n    id: '1',\n    title: '创建列表页面并初始化数据',\n    contents: [\n      {\n        type: 'text',\n        content: `编辑教程内置的页面${highlightText('miniprogram/pages/goods-list/index.js')}，在${highlightText('Page')}的${highlightText('data')}配置项中添加初始化数据${highlightText('goodsList')}，代码如下所示。该页面将用于展示商品列表。`,\n      },\n      {\n        type: 'code',\n        content: `\nPage({\n  data: {\n    goodsList: [{\n      _id: '1',\n      title: '商品1',\n      price: 1,\n    }],\n  },\n})\n        `,\n      },\n      {\n        type: 'text-link',\n        content: ['保存文件，','查看页面','，可以看到列表渲染出初始数据。'],\n      },\n    ],\n  },\n  {\n    id: '2',\n    title: '实现并部署一个后台接口',\n    contents: [\n      {\n        type: 'text',\n        content: `编辑教程内置的后台接口文件${highlightText('cloudfunctions/quickstartFunctions/fetchGoodsList/index.js')}，使用下面代码覆盖文件内容，返回一些模拟的商品列表数据。`,\n      },\n      {\n        type: 'code',\n        content: `\nconst cloud = require('wx-server-sdk');\ncloud.init({ env: cloud.DYNAMIC_CURRENT_ENV });\nexports.main = async (event, context) => {\n  return {\n    dataList: [\n      { _id: '1', title: '微信气泡徽章', price: 1800 },\n      { _id: '2', title: '微信地球鼠标垫', price: 5800 },\n      { _id: '3', title: '微信黄脸大贴纸', price: 500 }\n    ],\n  }\n};\n        `\n      },\n      {\n        type: 'text',\n        content: `保存文件后，在${highlightText('cloudfunctions/quickstartFunctions')}目录右键，选择<span style=\"color:red;\">【上传并部署-云端安装依赖】</span>，等待进度完成，即完成后端接口的开发与部署。`,\n      },\n      {\n        type: 'image',\n        content: 'function_deploy.png',\n      },\n      {\n        type: 'text',\n        content: `注：新用户部署时会提示创建云开发环境。<span style=\"color: red;\">新用户可免费开通云开发环境并试用。</span>`,\n      },\n      {\n        type: 'text',\n        content: `新用户开通环境后在${highlightText('cloudfunctions')}目录右键，选择当前环境为新建的环境。`,\n      },\n      {\n        type: 'image',\n        content: 'env-select.png',\n      },\n    ],\n  },\n  {\n    id: '3',\n    title: '小程序端调用后台接口',\n    contents: [\n      {\n        type: 'text',\n        content: `编辑列表页${highlightText('miniprogram/pages/goods-list/index.js')}，在 Page 下新增一个方法${highlightText('fetchGoodsList')}，用于调用后端接口，并在 Page 的${highlightText('onLoad')}生命周期调用该方法：`,\n      },\n      {\n        type: 'code',\n        content: `\nasync fetchGoodsList() {\n  this.setData({ isLoading: true });\n  const res = await wx.cloud.callFunction({\n    name: 'quickstartFunctions',\n    data: { type: 'fetchGoodsList' },\n  });\n  const goodsList = res?.result?.dataList || [];\n  this.setData({\n    isLoading: false,\n    goodsList\n  });\n},\n        `\n      },\n      {\n        type: 'code',\n        content: `\nonLoad() {\n  this.fetchGoodsList();\n},\n        `,\n      },\n      {\n        type: 'text-link',\n        content: ['保存文件后，','查看列表页','，可以看到调用后台接口获取到了模拟数据并正确显示。'],\n      },\n    ],\n  },\n  {\n    id: '4',\n    title: '从数据库中读取真实数据',\n    contents: [\n      {\n        type: 'text',\n        content: '前面步骤中，后台接口返回的是模拟数据，实际开发中，我们需要利用数据库实现持久存储，下面我们来通过云开发数据库能力实现这个效果。',\n      },\n      {\n        type: 'text',\n        content: `点击开发者工具顶部的【云开发】按钮，打开云开发控制台，选中【数据库】，新增一个商品集合命名${highlightText('goods')}，并添加若干条记录。注：本示例中，集合中的记录请保证具有${highlightText('title')}和${highlightText('price')}字段。`,\n      },\n      {\n        type: 'image',\n        content: 'scf-enter.png',\n      },\n      {\n        type: 'image',\n        content: 'database_add.png',\n      },\n      {\n        type: 'text',\n        content: `编辑后台接口代码${highlightText('cloudfunctions/quickstartFunctions/fetchGoodsList/index.js')}，用下面代码覆盖文件内容，用于读取数据库中数据：`,\n      },\n      {\n        type: 'code',\n        content: `\nconst cloud = require('wx-server-sdk');\ncloud.init({ env: cloud.DYNAMIC_CURRENT_ENV });\n\nconst db = cloud.database();\n\nexports.main = async (event, context) => {\n  const result = await db.collection('goods')\n    .skip(0)\n    .limit(10)\n    .get();\n  return {\n    dataList: result?.data,\n  };\n};\n        `,\n      },\n      {\n        type: 'text',\n        content: `保存文件后，在${highlightText('cloudfunctions/quickstartFunctions')}目录右键，选择<span style=\"color:red;\">【上传并部署-云端安装依赖】</span>，重新部署后台接口。`,\n      },\n      {\n        type: 'text-link',\n        content: ['','查看页面','，可以看到正确获取数据库中的数据并显示在列表中。'],\n      },\n    ],\n  },\n  {\n    id: '5',\n    title: '调用开放接口生成小程序码',\n    contents: [\n      {\n        type: 'text',\n        content: '实际小程序开发中，我们通常会对小程序进行传播分享。下面我们利用免鉴权的云调用能力实现小程序码。',\n      },\n      {\n        type: 'text',\n        content: `编辑教程内置的接口文件${highlightText('cloudfunctions/quickstartFunctions/genMpQrcode/index.js')}，用以下代码覆盖文件内容。该接口用于生成小程序码图片并上传到云存储保存。`,\n      },\n      {\n        type: 'code',\n        content: `\nconst cloud = require('wx-server-sdk');\n\ncloud.init({ env: cloud.DYNAMIC_CURRENT_ENV });\n\nexports.main = async (event, context) => {\n  const pagePath = event.pagePath;\n  // 获取小程序二维码的buffer\n  const resp = await cloud.openapi.wxacode.get({\n    path: pagePath,\n  });\n  const { buffer } = resp;\n  // 将图片上传云存储空间\n  const upload = await cloud.uploadFile({\n    cloudPath: String(pagePath).replaceAll('/', '_') + '.png',\n    fileContent: buffer\n  });\n  return upload.fileID;\n};\n        `,\n      },\n      {\n        type: 'text',\n        content: `保存文件后，在${highlightText('cloudfunctions/quickstartFunctions')}目录右键，选择【上传并部署-云端安装依赖】，部署该接口。`,\n      },\n      {\n        type: 'text',\n        content: `编辑商品列表页${highlightText('miniprogram/pages/goods-list/index.js')}，在 Page 配置中新增一个方法${highlightText('generateMPCode')}，用于调用接口获取小程序码：`,\n      },\n      {\n        type: 'code',\n        content: `\nasync generateMPCode() {\n  wx.showLoading();\n  const resp = await wx.cloud.callFunction({\n    name: 'quickstartFunctions',\n    data: {\n      type: 'genMpQrcode',\n      pagePath: 'pages/goods-list/index',\n    }\n  });\n  this.setData({ codeModalVisible: true, codeImageSrc: resp?.result });\n  wx.hideLoading();\n},\n        `\n      },\n      {\n        type: 'text-link',\n        content: ['保存文件后，在','商品列表页','点击【分享】按钮，会调用 generateMPCode 方法获取小程序码并弹框显示。'],\n      },\n    ],\n  },\n];\n\nmodule.exports = {\n  QuickStartPoints,\n  QuickStartSteps,\n}","// app.js\nApp({\n  onLaunch: function () {\n    if (!wx.cloud) {\n      console.error(\"请使用 2.2.3 或以上的基础库以使用云能力\");\n    } else {\n      wx.cloud.init({\n        // env 参数说明：\n        //   env 参数决定接下来小程序发起的云开发调用（wx.cloud.xxx）会默认请求到哪个云环境的资源\n        //   此处请填入环境 ID, 环境 ID 可打开云控制台查看\n        //   如不填则使用默认环境（第一个创建的环境）\n        env: \"\",\n        traceUser: true,\n      });\n    }\n\n    this.globalData = {};\n  },\n});\n"],"wx":{"version":1,"userVersion":"1.0.0","userNotes":"2025.3.11上传的第一个版本，可以实时查看数据以及状态识别\n22 在 2025年3月11日晚上8点06分 提交上传","packageVersion":"1557b7bacea3bb1c91f02063b1a0736c"}}